#include <iostream>
#include <list>
using namespace std;

struct vertix
{
	int ver;
	vertix* next;
};

struct edge
{
	vertix* edge;
	int degree;
};

class graph
{
	int n;
	edge* adjlist;

public:
	graph(int n)
	{
		this->n = n;
		adjlist = new edge[n];
		for (int i = 0; i < n; i++)
			adjlist[i].edge = NULL;
	}
	void addEdge(int src , int dest)
	{
		vertix* node = new vertix;
		node->ver = dest;
		node->next = adjlist[src].edge;
		adjlist[src].edge = node;
	}
	//5 -> 6 ->7
	void degreeOfVer(int src)
		
	{
		int ndegree = 0;
		vertix* curr = adjlist[src].edge;
		while (curr)
		{
			ndegree++;
			curr = curr->next;
		}
		adjlist[src].degree = ndegree;
		cout << "Num of degree of vertix "<<src<<" = "<<ndegree << endl;
	}
};
int main()
{
	graph gh(5);
	gh.addEdge(0, 1);
	gh.addEdge(0, 4);
	gh.addEdge(1, 2);
	gh.addEdge(1, 3);
	gh.addEdge(1, 4);
	gh.addEdge(2, 3);
	gh.addEdge(3, 4);
	gh.addEdge(4, 1);
	gh.degreeOfVer(4);
}
